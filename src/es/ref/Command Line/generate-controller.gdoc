h1. generate-controller

{hidden}
h2. Purpose

The @create-controller@ command generates a controller and associated unit test for the given domain class

h2. Examples
{hidden}

h2. Propósito

El comando @create-controller@ genera un controlador y una unidad de test asociada para la clase de dominio dada.

h2. Ejemplos
{code:java}
grails generate-controller org.bookstore.Book
{code}

{hidden}
h2. Description

Grails supports a feature known as scaffolding which involves the generation of a CRUD (Create/Read/Update/Delete) interface for a given domain class.

The @generate-controller@ command generates a controller that implements CRUD for the given domain class. So for a domain class @org.bookstore.Book@ a controller @BookController.groovy@ in @grails-app/controllers/org/bookstore@ will be generated.

Usage:
{hidden}

h2. Descripción

Grails es conocida por la característica scaffolding la cual implica la generación de una interfaz CRUD (Crear/Leer/Modificar/Eliminar) para la clase de dominio dada.

El comando @generate-controller@ genera un controlador que implementa un CRUD para la clase de dominio dada. Asi es que la clase de dominio @org.bookstore.Book@ un controlados @BookController.groovy@ en el @grails-app/controllers/org/bookstore@ será generado.

Uso:
{code:java}
grails generate-controller [domain class name]
{code}

Fired Events:

{hidden}
* @StatusUpdate@ - When generation begins
* @StatusFinal@ - When generation completes
{hiddem}
* @StatusUpdate@ - Cuando comienza la generación
* @StatusFinal@ - Cuando se completa la generación
@StatusFinal@ - Cuando se completa la generación
 
