h1. create-domain-class

{hidden}
h2. Purpose

The @create-domain-class@ command creates a domain and associated integration test for the given base name.

h2. Examples
{hidden}

h2. Propósito

El comando @create-domain-class@ crea un dominio y un test de integración asociado al dominio de clase dado.

h2. Ejemplos

{code:java}
grails create-domain-class org.bookstore.Book
{code}

{hidden}
h2. Description

Creates a domain class for the given base name. For example, for a base name "org.bookstore.Book" a domain class called @Book@ will be created in the @grails-app/domain/org/bookstore@ directory.

A domain class represents the core model behind in your application and is typically mapped onto database tables. For more information on domain models in Grails refer to the chapter on [GORM|guide:GORM] in the user guide.

The exact behaviour of the command depends on the argument you pass. If you don't specify a package (like "org.bookstore" in the example), then the name of the application will be used as the package. So if the application name is "bookstore" and you run @create-domain-class Book@, then the command will create the file @grails-app/domain/bookstore/Book.groovy@. Also, if you don't give your domain class an initial capital letter, it will be capitalized for you. So an argument of "org.bookstore.book" will result in a domain class called @Book@.

Note that this command is just for convenience and you can also create domain classes in your favourite text editor or IDE if you choose.

Usage:
{hidden}

h2. Descripción

Crea un dominio de clase para el nombre dado. Por ejemplo, para el nombre org.bookstore.Book un dominio de clase llamado @Book@ será creada en el directorio @grails-app/domain/org/bookstore@.

Una clase dominio representa el modelo del núcleo en su aplicación y es normalmente mapeado con la base de datos. Para más información de modelos de dominio en Grails, consulte la sección [GORM|guide:GORM] en la guía de usuario.

El comportamiento exacto del comando depende de los argumentos que le pase. Si no especifica un paquete (como "org.bookstore" en el ejemplo), entonces el nombre de la aplicación será usado como un paquete. Por tanto si el nombre de la aplicación es "bookstore" y ejecuta @create-domain-class Book@, entonces el comando creará el fichero  @grails-app/domain/bookstore/Book.groovy@. Además, su no tiene un dominio de clase en letra mayúscula, será transformado. Así que el argumento de "org.bookstore.book" resultará en el domio de clase llamado @Book@.

Tenga en cuenta que este comando es simplemente  para su conveniencia y puede crear dominios de clase en su editor de texto o IDE favoritos si lo desea.

Uso:
{code:java}
grails create-domain-class [name]
{code}

Fired Events:
{hidden}
* @CreatedFile@ - When the domain class is created
{hidden}
* @CreatedFile@ - Cuando el dominio de clase es creado.
